00:19:27	Maximiliano Contieri:	otra vez el video WAT con javascript absurdo
00:20:52	Daniel Maldonado:	Mira vos
00:22:39	Daniel Maldonado:	Jaja ni a palos sabia eso
00:22:40	Maximiliano Contieri:	no lloren . es una "feature"
00:22:46	Fabian Eduardo Diaz Lizcano:	jajajajaja
00:22:49	Jaime Sossa:	aguanta typescript
00:22:50	Damian Mazzini:	increible
00:22:50	Ricardo Mercado Visbal:	jajaja
00:23:00	Fabian Eduardo Diaz Lizcano:	A aprender Smalltalk üôÇ
00:23:01	Jeronimo Carrizo:	lol
00:23:18	Maximiliano Contieri:	javascript es una mezcla unica de clases y prototipos
00:23:23	Juan Carlos Humpiri:	no se si quiero llorar
00:23:27	Juan Carlos Humpiri:	jaja
00:23:41	Federico Iachetti:	a JavaScript lo definieron en una juntada de DND .... con dados con 1 en todas las caras
00:24:10	Fernando Laudadio:	Excelente Facu!! no lo sabia!
00:24:17	Pep Diz:	nada a extra√±ar en el lenguaje que trajo el hoisting ;-)
00:24:31	Maximiliano Contieri:	buenisimo Facu. te lo robo para code smell, despues pasame la CBU
00:25:19	Maximiliano Contieri:	tienen mas syntactic sugar que un diabetico
00:25:36	Jeronimo Carrizo:	See mall
00:25:45	Fernando Laudadio:	que seria de javascript con tantos errores, si no le metieran ficha a v8
00:25:47	Lorenzo Jos√© Lamas:	QUe me disculpen, pero en Ruby veo m√°s syntactic sugar ...
00:26:06	Jeronimo Carrizo:	Ni hablar, labrar con decimales en JS, hermoso!
00:26:39	Maximiliano Contieri:	eso es un Truthy
00:26:59	Maximiliano Contieri:	da para hablar de Truthy y Falsy para todo un episodio
00:27:01	Fabian Eduardo Diaz Lizcano:	L√≥gica confusa
00:27:27	Federico Iachetti:	yo creo que quisieron implementar el principio de menor asombro y se equivocaron el s√≠mbolo
00:27:28	Ricardo Mercado Visbal:	incredible
00:28:55	Jeronimo Carrizo:	Para eso estan los linters rules, a veces nos ayudan
00:29:10	Hernan Modrow:	Nos da de comer, punto.
00:31:18	Jeronimo Carrizo:	Notok === no-tocar
00:31:35	Eduardo Riesco:	no token
00:31:51	Leandro Linardos:	Not ok
00:32:47	Joaquin Wojcik:	No son siglas?
00:32:52	Daniel Maldonado:	Como paso ese PR ?
00:33:57	Fernando Laudadio:	notok-es un mal nombre
00:33:59	Leandro Linardos:	noToken ?
00:34:01	Leandro Linardos:	>_<
00:34:09	Juan Carlos Humpiri:	-.-
00:34:10	Ezequiel Birman:	notoken es un mal nombre
00:34:17	Leandro Linardos:	noauth
00:34:18	Leandro Linardos:	lol
00:34:27	Juan Carlos Humpiri:	capas era un programador de cobol
00:34:31	Juan Carlos Humpiri:	:D
00:34:58	Jeronimo Carrizo:	Tal vez tenia poca memoria!
00:34:59	Hernan Modrow:	pobres programadores COBOL..
00:35:14	Maximo Prieto:	nocom
00:35:18	Maximiliano Contieri:	la mejor solucion siempre es escribir tests explicitos
00:35:26	Juan Carlos Humpiri:	jajaja
00:35:28	Juan Carlos Humpiri:	muy bueno
00:35:29	Maximiliano Contieri:	ademas del nombre
00:36:03	Fabian Eduardo Diaz Lizcano:	Eduardo lo hizo
00:37:17	Fernando Laudadio:	van a tener que incluir etimologia en las carreras
00:38:24	Juan Carlos Humpiri:	redux
00:39:25	Cristi√°n P√©rez:	Angular ‚ù§Ô∏è
00:39:41	Maximo Prieto:	Muy buena la UI
00:40:06	Eduardo Riesco:	Ugly Interface
00:48:41	Joaquin Wojcik:	Se entendio
00:48:46	Ricardo Mercado Visbal:	si
00:48:47	Braian Gonzales:	Si si
00:48:48	Jaime Sossa:	el c√≥digo se documenta solo
00:54:21	Cristi√°n P√©rez:	el problema en este tipo de frameworks no es que crezca el proyecto, sino que crezca los componentes, a veces un componente se encarga de cosas que deberian resolver por separado varios componentes, y toda la logica se simplifica automaticamente
00:58:37	Jeronimo Carrizo:	En mi experiencia, cuando tenes una vista muy compleja, con muchos observers, y muchos componentes observadores en una misma pagina, es cada vez mas dificil saber cuando cambias algo, todo el impacto en cascada, no es imposible pero es cada vez mas dificil de ver todo el flow.
00:59:03	Juan Carlos Humpiri:	mas acoplamiento
01:01:19	Daniel Maldonado:	Y lentos
01:01:28	Eduardo Riesco:	Framework Driven Development
01:01:36	Fabian Eduardo Diaz Lizcano:	ajajjajajaja
01:01:46	Jeronimo Carrizo:	Ni hablar si cambia el framework, se te rompen todos los tests
01:01:51	Maximo Prieto:	Clap clap leandro
01:03:11	Jaime Sossa:	Mal ejemplo
01:03:13	Joaquin Wojcik:	Not ok quiz√°s es un buen nombre para esto
01:03:15	Pep Diz:	contraejemplo
01:03:19	Ezequiel Birman:	NOT OK
01:03:22	Daniel Maldonado:	jajaja
01:03:27	Cristi√°n P√©rez:	tutorial jaja
01:03:27	Eduardo Riesco:	Vendor lock-in con el framework. Quiz√° el dise√±o del "ejemplo" no sea tan casual.
01:03:29	Fabian Eduardo Diaz Lizcano:	jajajaja
01:03:34	Leandro Linardos:	Pattern -> antipattern
01:03:39	Leandro Linardos:	Ejemplo -> contraejemplo
01:03:44	Juan Carlos Humpiri:	no hay objetos de dominio
01:03:45	Leandro Linardos:	anti*
01:03:49	Juan Carlos Humpiri:	con comportamiento
01:04:53	Jeronimo Carrizo:	Podriamos agregarle TypeScript igual
01:04:59	Daniel Maldonado:	Habia que salir con la feature
01:05:27	Hernan Modrow:	agregamos TS y todo se vuelve del tipo any
01:05:54	Juan Carlos Humpiri:	yo he visto mucho de objetos literales con typescript y tampoco nos da informaci√≥n sobre el comportamiento de los objetos
01:06:25	Nahuel Garbezza:	https://blog.10pines.com/2021/12/09/a-case-against-nameless-objects/
01:06:38	Jeronimo Carrizo:	Pero uno puede nombrar los tipos, ahi esta un poquito mejor
01:06:39	Maximiliano Contieri:	primitive obsession
01:07:02	Maximo Prieto:	Aguante Juanita
01:09:57	Maximo Prieto:	Bueno. No todos
01:10:57	Hernan Modrow:	en Python pasa lo mesmo..
01:11:19	Maximo Prieto:	Parece sutil lo que dice hern√°n, pero es esencial
01:11:44	Maximiliano Contieri:	deberiamos dejar de metaprogramar por 20 a√±os. Luis Barrionuevo
01:11:47	Maximo Prieto:	NO estamos obligados a cometer los mismos errores que otros
01:13:36	Fabian Eduardo Diaz Lizcano:	Lo miramos a otro framework üòÑ
01:13:40	Pep Diz:	delgar y subcontratar ;-)
01:13:42	Fabian Eduardo Diaz Lizcano:	+Lo migramos
01:14:01	Omar Huanca:	subcontratar ......jajjajajj
01:14:06	Fabian Eduardo Diaz Lizcano:	jajajajaa
01:14:15	Hernan Modrow:	para eso deber√≠amos escuchar y entender los errores que cometieron antes que nosotros, no?
01:14:45	Juan Pablo Ospina Herrera:	Volver a empezar
01:14:50	Ezequiel Birman:	la web no deber√≠a existir
01:14:57	Fabian Eduardo Diaz Lizcano:	jajajajaja
01:15:02	Juan Carlos Humpiri:	siempre proponen  hacer test fragiles
01:15:08	Juan Carlos Humpiri:	a la larga complica
01:16:03	Hernan Modrow:	que no se te movieran los botones..
01:16:32	Leandro Linardos:	Ahi empiezan a aparecer los precision 0.99, 0.95, 0.5
01:20:58	Juan Carlos Humpiri:	crear objetos
01:20:59	Lucas Moglia:	eificar
01:20:59	Francisco Jaimes Freyre:	reificar
01:21:02	Pablo Lucero:	crear abstracciones
01:22:02	Pep Diz:	que conste que pascal tiene objetos...
01:22:33	Maximo Prieto:	RES, del lat√≠n: cosa. Reificar darle a algo entidad de cosa. En objetos, hacer objeto una cosa de la realidad
01:22:43	Jeronimo Carrizo:	El proyectos tiene mucha $$ y hay tiempo! je
01:23:08	Maximiliano Contieri:	no se quejen tanto de los managers. tampoco nos pagan todo el tiempo para hacer frameworks y deuda tecnica. tenemos que entregar valor
01:23:50	Fabian Eduardo Diaz Lizcano:	jajajaa
01:24:39	Ariel Dc:	entregar algo sin test mas que entregar valor es entragar algo que esta por cotizar jajaj!!
01:24:52	Hernan Modrow:	¬øUds le discuten como hacer su trabajo al mec√°nico, el plomero o el service de la heladera?
01:26:25	Daniel Maldonado:	Jugadisimo
01:27:51	Leandro Linardos:	Hay casos en el que ‚Äúte dan‚Äù el tiempo y el problema pasa a ser que el equipo de dev no sabe que hacer y/o lo hace mal. Yo creo que hoy en d√≠a la calidad t√©cnica es un flor de cuello de botella en la industria, y es bastante com√∫n y c√≥modo echarle la culpa al PM, al PO, al TL.
01:28:11	Fabian Eduardo Diaz Lizcano:	De acuerdo
01:28:16	Hernan Modrow:	+1
01:28:26	Fabian Eduardo Diaz Lizcano:	Hoy en d√≠a los dev se crean en 3 meses
01:28:42	Daniel Maldonado:	new Dev()
01:28:43	Jeronimo Carrizo:	+1
01:28:43	Hernan Modrow:	eso no es nuevo..
01:28:56	Hernan Modrow:	s√≥lo que ahora es m√°s popular..
01:29:06	Leandro Linardos:	Hay devs con mucha tiempo en la industria que codean (codeamos? jaja) para el ojete tmb.
01:29:09	Fabian Eduardo Diaz Lizcano:	Si, por la alta demanda de la industria
01:29:47	Leandro Linardos:	Mucha experiencia en frameworks, pero muy poco de lo que se habla ac√°.
01:29:53	Daniel Maldonado:	El que quiere aprender sobre dise√±o lo tiene que hacer contra corriente en la mayoria de las empresas y en la facu olv√≠date tamb
01:31:47	Hernan Modrow:	en la facu depende de les profes que te toquen..
01:32:08	Daniel Maldonado:	Si, depende de la suerte supongo como todo en la vida (?
01:34:00	Leandro Linardos:	Puede q pase por un tema de ‚Äúexposici√≥n‚Äù tmb, por mas buenos profes q tengas, los tenes por cuanto? 1 cuatri, 2, 1 a√±o, 2? Dsps pasas a√±os conviviendo con codebases donde de entrada no podes aplicar poco y nada de lo q aprendiste ‚Äúbien‚Äù‚Ä¶ las malas juntas como en la escuela! jaja
01:35:04	Jeronimo Carrizo:	Lo que me gusta a mi en cada laburo que voy son proponer charlas t√©cnicas, y tener una charla semanal ayuda bastante la verdad para seguir mejorando la calidad del c√≥digo.
01:37:00	Leandro Linardos:	Science bitch!
01:37:27	Hernan Modrow:	volvemos al principio, ¬øpor qu√© no podemos aplicar las buenas pr√°cticas que conocemos?
01:38:34	Hernan Modrow:	¬øqui√©n nos lo impide? ¬øel TL? ¬øel Manager? ¬øel PO? ¬øel PM?
01:38:46	Hernan Modrow:	¬ønuestros pares?
01:39:04	Leandro Linardos:	La codebase, nuestros pares
01:40:56	Maximiliano Contieri:	Solo hay dos cosas imposibles en software. Poner nombres e invalidar caches
01:42:59	Hernan Modrow:	con los pares se puede hacer lo que dice Jeronimo, hacer juntadas para charlar de c√≥digo y como mejorar la calidad del mismo.. pod√©s atacar problemas de la base de codigo y listo.. liquidaste tus dos problemas..
01:43:13	Hernan Modrow:	es autom√°tico el cambio.. no, pero es un avance..
01:44:02	Jeronimo Carrizo:	Si, las code reviews son important√≠simas tambien
01:44:18	Leandro Linardos:	Que lindo el prefijo test/pass/refactor en los mensajes de los commits
01:45:25	Maximo Prieto:	A ver qui√©n se anima a definir el concepto de belleza en programaci√≥n
01:45:30	Maximo Prieto:	O en lo que sea
01:46:09	Pablo Lucero:	simple as possible, but no simpler
01:46:13	Fabian Eduardo Diaz Lizcano:	Si como oido eso de Golang y lo peor es que muchas empresas ahora se decantan por Golang
01:46:21	Maximo Prieto:	Hrt
01:46:24	Maximiliano Contieri:	Golang es una basura. Vengan de a uno
01:46:29	Maximo Prieto:	Hrtn√°n se est√° animando
01:46:31	Juan Pablo Ospina Herrera:	+1
01:46:40	Pep Diz:	pero eso es muy relativo
01:47:19	Pep Diz:	en muchos lenguajes hay idiomas, patrones usuales de como codificar y eso es  bonito, limpio y comprensible para los habituados a ese idioma espec√≠fico
01:47:33	Maximiliano Contieri:	Yo puse en linkedin que trabajo en cualquier cosa menos golang. Me escriben los recruiters con curiosidad porque no lo entienden
01:47:57	Fabian Eduardo Diaz Lizcano:	jajajajajajaj
01:48:30	Maximiliano Contieri:	Bancamos a unclebob . No lo cancelen
01:49:19	Pep Diz:	eso es un buen ejemplo, Chuck dec√≠a que NO se deben usar variables locales que solo se deber√≠an usar variables globales, las locales son un error
01:49:28	Pep Diz:	y mira por donde fuimos todos despu√©s ;-)
01:49:29	Ezequiel Birman:	cr√≠ptico para el que reci√©n empieza porque es muy diferente pero los que lo usan lo adoran
01:49:38	Hernan Modrow:	Cancelad√≠simo, hay muchos otros referentes para seguir.
01:49:54	Leandro Linardos:	Escuch√© por ah√≠ q cierto placer de escuchar m√∫sica viene por el lado de poder ‚Äúpredecir y acertar‚Äù como sigue esa pieza musical
01:49:55	Maximiliano Contieri:	Aca somos uncles‚Äôs army
01:50:11	Leonardo Giorcelli:	Hay q separar la obra del artista XD
01:50:21	Eduardo Riesco:	C√≥digo bello = conversaci√≥n con un amigo. 
La conversacione avanza f√°cil y estamos razonablemente de acuerdo en nuestra visi√≥n del mundo.
01:50:23	Diego De Cristofano:	Cual es el tema con el uncle Bob?
01:50:41	Leandro Linardos:	Que no hace lo que predica >_<
01:50:46	Ezequiel Birman:	@Leandro hay una dial√©ctica si me disculp√°s la palabra. En un extremo ten√©s algo demasiado predecible y en el otro el cambio constante.
01:50:51	Maximiliano Contieri:	Sos opiniones politicas
01:51:37	Jeronimo Carrizo:	La verdad que yo saque mucho de Uncle bob, pero saco de varios lados mas, me quedo con lo que me cuadra
01:54:06	Fabian Eduardo Diaz Lizcano:	Es complejo cuando no tienes ejemplos como los que nos ha ense√±ado hern√°n y cuando no sabes si eso realmente es mantenible en el tiempo
01:55:40	Pep Diz:	pues a mi eso que acaba de decir Hernan me parece un error,  el programador NO es el que tiene que nombrar los objetos del dominio porque generalmente no los conoce y la aproximaci√≥n que hace est√° sesgada o es parcial, deber√≠a hacerse en conjunto con la parte funcional usuaria del dominio
01:56:37	Lorenzo Jos√© Lamas:	Como que no es habitable !
01:56:50	Hernan Modrow:	Pabell√≥n 1 es m√°gico..
01:57:34	Jeronimo Carrizo:	Cuando ves lindo c√≥digo, es parecido a ver un hermoso cuadro. Creo que es lo que me hizo enamorar esta profesi√≥n.
01:58:25	Eduardo Riesco:	Programar es conversar. La habitabilidad de la conversaci√≥n est√° en el entendimiento.
01:58:46	Maximo Prieto:	Coincido, Eduardo
02:00:38	Hernan Modrow:	a mi me gusta pensar en cuanta disonancia cognitiva me produce mirar el c√≥digo (qu√© tan dif√≠cil es mirarlo un rato y entender que hace sin que te canse mentalmente)
02:01:12	Maximo Prieto:	Buen punto
02:01:39	Maximo Prieto:	Tiene que ser comprensible a primera lectura
02:03:34	Leandro Linardos:	Por ahi va por el negativo: algo es bello cuando no tiene nada que no te guste, te moleste, te incomode
02:04:00	Daniel Maldonado:	Claro, no es que sea lindo, sino que no tiene nada feo jaja
02:04:21	Lorenzo Jos√© Lamas:	Mi m√©trica personal, va en la dificultad del contexto switch. Si estoy con otra cosa, cuanto me cuesta ponerme en sinton√≠a con ese c√≥digo
02:04:52	Leandro Linardos:	Ese listado de commits es bello üé®
02:04:57	Pablo Andres Beroiza:	lo bello va cuando aumentas la legibilidad y reducir la complejidad del c√≥digo
02:05:33	Maximo Prieto:	Seg√∫n la m√©trica de Leandro Linares una serie b√°sica de Netflix ser√≠a bella. No est√° mal, pero no me alcanza
02:06:24	Maximo Prieto:	Hay muchos programadores que disfrutan de la complejidad de c√≥digo, Pablo
02:06:39	Maximo Prieto:	No est√° bueno, pero les gusta
02:06:49	Maximo Prieto:	¬øSer√° bello?
02:06:51	Pablo Andres Beroiza:	ser√°n masoquistas
02:07:06	Leandro Linardos:	pero una serie b√°sica de Netflix molesta por lo b√°sica q es ü§î
02:07:07	Jaime Sossa:	belleza ser√≠a que este sonriendo por que entiendes lo que lees y no tener ganas de hacerle algo malo a quien lo escribi√≥.
02:07:27	Maximo Prieto:	No me molesta lo b√°sico
02:07:41	Maximo Prieto:	Muchas veces me gusta
02:08:04	Maximiliano Contieri:	Dtos
02:08:07	Maximiliano Contieri:	Beans
02:08:08	Maximo Prieto:	Me gusta tu esp√≠ritu, Jaime
02:08:17	Leandro Linardos:	Entiendo, y que ser√≠a lo q no alcanza de la ser√≠a b√°sica de Netflix? Q le falta?
02:08:23	Pablo Lucero:	mas que pensar el codigo en terminos de belleza me parece mas util pensar que esta bien dise√±ado. Un buen dise√±o tiene que ser util antes que bello. Si es bello mejor, pero si es bello pero no es util/resuleve bien para lo que fue hecho, no va
02:09:43	Maximo Prieto:	A ver, Leandro L., le falta detalle
02:09:50	Maximo Prieto:	desarrollo
02:10:00	Maximo Prieto:	Pero me sirve
02:11:05	Hernan Modrow:	porque los FEs y BEs son enemigos naturales.. (?
02:11:27	Daniel Maldonado:	Una lib aparte para dominio de negocio
02:12:29	Daniel Maldonado:	‚ÄúAsi estaba en el ejemplo de la docu‚Äù me han dicho
02:12:39	Leandro Linardos:	‚ÄúAsi anda‚Äù
02:12:51	Leandro Linardos:	"(Hoy)"
02:13:19	Leonardo Giorcelli:	Pasa q no siempre es f√°cil romper la costumbre o el paradigma mas usado, a veces no te imaginas que algo se puede hacer mejor, porque te falta conocimiento
02:13:20	Hernan Modrow:	volvemos al inicio, nos faltan buenos ejemplos
02:13:40	Pep Diz:	ah√≠ no hay dilema, siempre inmutable! ;-)
02:14:20	Fabian Eduardo Diaz Lizcano:	jajajajaja
02:14:35	Christian Contarino:	Muy pocas veces casi nunca se usa
02:14:54	Maximiliano Contieri:	Agunate el blockchain
02:16:12	Leandro Linardos:	Yo creo que es una cuesti√≥n natural de aprender, si hoy sabes mas que ayer, seguramente ma√±ana sepas m√°s que hoy. En el momento que te ‚Äúcasaste‚Äù con que lo que tenes hoy es lo mejor (y te olvidaste que lo tenias antes tmb ERA lo mejor), dejaste de aprender.
02:16:31	Leandro Linardos:	No nos gusta el cambio >_<
02:16:53	Maximiliano Contieri:	Programacion funcional. Belleza
02:19:38	Pep Diz:	pero hay diferentes formas de modelar la mutabilidad
02:19:49	Pep Diz:	y puedes modelarlo con objetos inmutables
02:20:25	Eduardo Riesco:	nunca me ba√±o ene el mismo objeto
02:20:31	Fabian Eduardo Diaz Lizcano:	jajajaajaja
02:20:32	Alexander Ezequiel B√°lsamo:	jajajaa
02:20:41	Pep Diz:	es decir, que es tambi√©n una cuesti√≥n t√©cnica, no s√≥lo de dominio de problema
02:22:54	Maximiliano Contieri:	Y acoplado
02:24:35	Jeronimo Carrizo:	Tal vez estar√≠a bueno tener edificado el obj Inventariado. Y que el inventariado conoce el stock
02:25:12	Jeronimo Carrizo:	Y un SuperMarket tiene una referencia a Inventariado.
02:27:31	Ezequiel Birman:	Gracias Hern√°n por expresar lo que yo no hubiera podido
02:28:29	Maximiliano Contieri:	Muy buenooooo
02:28:37	Fabian Eduardo Diaz Lizcano:	Grande Hernan, muchas gracias por compartir
02:28:51	Fabian Eduardo Diaz Lizcano:	üëè
02:29:19	Daniel Maldonado:	Para el back postman / insomnia
02:29:29	Leandro Linardos:	Una bofetada a lo Will Smith al ‚Äúno hago tdd xq hago frontend‚Äù
02:29:46	Ricardo Mercado Visbal:	genial el ejemplo !!!
02:29:53	Leandro Linardos:	‚ÄúNo TESTEO xq hago frontend"
02:29:56	Maximiliano Contieri:	Manden memes
02:31:35	Leandro Linardos:	https://imgflip.com/i/6asdaf
02:34:56	Hernan Modrow:	por qu√© se llama Carrito?
02:35:06	Daniel Maldonado:	Changuito
02:40:19	Hernan Modrow:	hermoso ejemplo
02:40:27	Lorenzo Jos√© Lamas:	La verdad que si !
02:43:40	Diego De Cristofano:	Se puede pasar el repo hoy?
02:43:50	Daniel Maldonado:	Si, eso
02:44:49	Pep Diz:	muy buena charla, lo disfruto mucho como ya viene siendo habitual, gracias a todos
02:45:20	Juan Carlos Humpiri:	pueden pasar el canal slack?
02:45:31	Juan Carlos Humpiri:	para poder charlar
02:46:20	Omar Huanca:	Genial, gracias.!
02:46:21	Leandro Linardos:	Muy bueno!
02:46:24	Leandro Linardos:	gracias!
02:46:31	Fabian Eduardo Diaz Lizcano:	Muchas gracias !!!!
02:46:36	Jeronimo Carrizo:	Nuuu q no se corte!!!
02:46:38	Ricardo Mercado Visbal:	Muchas gracias
02:46:39	Nicolas Casta√±o:	muchas gracias!
